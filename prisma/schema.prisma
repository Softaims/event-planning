generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                            Int                       @id @default(autoincrement())
  email                         String
  emailVerified                 Boolean                   @default(false)
  emailVerificationToken        String?
  password                      String
  firstName                     String
  lastName                      String
  phoneNumber                   String                    @unique
  dob                           DateTime
  pronouns                      Pronouns?
  profileImage                  String?
  passwordChangedAt             DateTime                  @default(now())
  passwordResetToken            String?
  passwordResetExpires          DateTime?
  active                        Boolean                   @default(true)
  role                          Role                      @default(User)
  createdAt                     DateTime                  @default(now())
  updatedAt                     DateTime                  @updatedAt
  currentAuthToken              String?
  phoneVerificationToken        String?
  phoneVerified                 Boolean                   @default(false)
  phoneVerificationTokenExpires DateTime?
  preferences                   Json?
  isRegistrationComplete        Boolean                   @default(false)
  lat                           Float?
  location                      Unsupported("geography")?
  long                          Float?
  eventAttendances             EventAttendance[]         @relation
  createdEvents                 Event[]                   @relation("EventCreatedBy") 
}

model EventAttendance {
  id         String   @id @default(uuid())
  eventId    String   
  externalEventId String?
  userId     Int   
  createdAt  DateTime @default(now())
  isGoing    Boolean  @default(false)
  isLiked    Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id])
  externalEvent   ExternalEvent? @relation(fields: [externalEventId], references: [id])
  @@unique([eventId, userId]) 
}

model ExternalEvent {
  id              String  @id @default(uuid())
  source          String 
  description     String
  name            String  
  image           String?  
  location        String?  
  dateTime        DateTime?  
  createdAt       DateTime @default(now())
  eventAttendances EventAttendance[] @relation
}

model Event {
  id           String   @id @default(uuid())
  name         String 
  description  String
  dateTime     DateTime
  image        String 
  source       String
  location     String   
  ageMin       Int     
  ageMax       Int     
  ticketUrls   String[] 
  preferences  Json? 
  createdAt    DateTime @default(now()) 
  updatedAt    DateTime @updatedAt
  createdBy    User     @relation("EventCreatedBy", fields: [userId], references: [id]) 
  userId       Int      
}



enum Role {
  Admin
  User
}

enum Pronouns {
  he_him
  she_her
  they_them
  other
}
